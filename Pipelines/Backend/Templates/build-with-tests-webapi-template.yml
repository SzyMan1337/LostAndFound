parameters:
  - name: buildConfiguration
    type: string
    default: "Release"

  - name: dotNetVersion
    type: string
    default: "6.0.x"

  - name: dotnetFramework
    type: string
    default: "net6.0"

  - name: webapiProjectDirectory
    type: string

  - name: unitTestProjectDirectory
    type: string
    default: ""

  - name: integrationTestProjectDirectory
    type: string
    default: ""

  - name: runUnitTests
    type: boolean
    default: true

  - name: runIntegrationTests
    type: boolean
    default: true

  - name: artifactName
    type: string

stages:
  - stage: BuildWebApi
    displayName: Build WebApi and run tests
    jobs:
      - job: Build
        displayName: Build .Net Core WebApi and run tests
        steps:
          - task: UseDotNet@2
            inputs:
              version: ${{ parameters.dotNetVersion }}
              includePreviewVersions: true

          - script: dotnet build --framework ${{ parameters.dotNetFramework }} --configuration ${{ parameters.buildConfiguration }}
            workingDirectory: ${{ parameters.webapiProjectDirectory }}
            displayName: "dotnet build ${{ parameters.buildConfiguration }}"

          - script: dotnet test --configuration ${{ parameters.buildConfiguration }} --collect "Code Coverage" --logger trx
            condition: and(succeeded(), eq('${{ parameters.runUnitTests }}', 'true'))
            workingDirectory: ${{ parameters.unitTestProjectDirectory }}
            displayName: "Run Unit tests"

          - task: PublishTestResults@2
            condition: succeededOrFailed()
            displayName: "Publish Unit Tests results"
            inputs:
              testResultsFormat: VSTest
              testResultsFiles: "**/*.trx"

          - script: dotnet test --configuration ${{ parameters.buildConfiguration }} --collect "Code Coverage" --logger trx
            condition: and(succeeded(), eq('${{ parameters.runIntegrationTests }}', 'true'))
            workingDirectory: ${{ parameters.integrationTestProjectDirectory }}
            displayName: "Run Integration tests"

          - task: PublishTestResults@2
            condition: succeededOrFailed()
            displayName: "Publish Integration Tests results"
            inputs:
              testResultsFormat: VSTest
              testResultsFiles: "**/*.trx"

          - task: DotNetCoreCLI@2
            displayName: "Publish project to Staging Directory"
            inputs:
              command: "publish"
              publishWebProjects: false
              projects: |
                ${{ parameters.webapiProjectDirectory }}/*.csproj
              arguments: "--configuration ${{ parameters.buildConfiguration }} --output $(Build.artifactstagingdirectory)"
              zipAfterPublish: false

          - task: PublishBuildArtifacts@1
            displayName: "Publish artifact"
            inputs:
              pathtoPublish: "$(Build.ArtifactStagingDirectory)"
              artifactName: "$(Build.BuildId)-${{ parameters.artifactName }}"
